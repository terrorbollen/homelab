telegraf-ds:
  image:
    repo: "telegraf"
    tag: "1.36-alpine"
    pullPolicy: IfNotPresent
  imagePullSecrets: []
  service:
    port: 8080
  resources:
    requests:
      memory: 256Mi
      cpu: 0.1
    limits:
      memory: 2Gi
      cpu: 1
  env:
    # This pulls HOSTNAME from the node, not the pod.
    - name: HOSTNAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
    # In test clusters where hostnames are resolved in /etc/hosts on each node,
    # the HOSTNAME is not resolvable from inside containers
    # So inject the host IP as well
    - name: HOSTIP
      valueFrom:
        fieldRef:
          fieldPath: status.hostIP
    # Mount the host filesystem and set the appropriate env variables.
    # ref: https://github.com/influxdata/telegraf/blob/master/docs/FAQ.md
    # HOST_PROC is required by the cpu, disk, diskio, kernel and processes input plugins
    - name: "HOST_PROC"
      value: "/hostfs/proc"
    # HOST_SYS is required by the diskio plugin
    - name: "HOST_SYS"
      value: "/hostfs/sys"
    - name: "HOST_MOUNT_PREFIX"
      value: "/hostfs"
  ## Add custom volumes and mounts
  # volumes:
  # - name: telegraf-output-influxdb2
  #   configMap:
  #     name: "telegraf-output-influxdb2"
  # mountPoints:
  # - name: telegraf-output-influxdb2
  #   mountPath: /etc/telegraf/conf.d
  #   subPath: influxdb2.conf
  override_config:
    toml: ~
    # Provide a literal TOML config
    toml: |+
      [[inputs.cpu]]
        percpu = true
        totalcpu = true
        collect_cpu_time = false
        report_active = false
      [[inputs.disk]] 
        ignore_fs = ["tmpfs", "devtmpfs", "devfs"]
      [[inputs.diskio]]
      [[inputs.mem]]
      [[inputs.net]]
      [[inputs.system]]
      [[inputs.swap]]
      [[inputs.netstat]]
      [[inputs.processes]]
      [[inputs.kernel]]
      [[inputs.file]]
        files = ["/sys/class/thermal/thermal_zone0/temp"]
        name_override = "cpu_temperature"
        data_format = "value"
        data_type = "integer"
      [agent]
        interval = "10s"
      [[outputs.influxdb_v2]]
      urls           = ["http://influxdb-influxdb2.telegraf.svc"]
        bucket         = "data"
        organization   = "OurCompany"
        token          = "G1D4fbsWygNvdpv11ExYnrF3LTUsSVHrHh90MRt3c0ulFsDTfQqq1JQWsi1b9LQ7L5oXrEuDVaVxQTQ8DI7XrA=="
    monitor_self: false
    docker_endpoint: "unix:///var/run/docker.sock"


influxdb2:
  image:
    repository: influxdb
    tag: 2.7.4-alpine
    pullPolicy: IfNotPresent

  adminUser:
    organization: "influxdata"
    bucket: "default"
    user: "admin"
    password: "2s9HHmVndq7UoQm1GSDhp6Hcw8VmSH40"
    retention_policy: "0s"
    token: "G1D4fbsWygNvdpv11ExYnrF3LTUsSVHrHh90MRt3c0ulFsDTfQqq1JQWsi1b9LQ7L5oXrEuDVaVxQTQ8DI7XrA=="

  # persistence:
  #   enabled: true
  #   useExisting: true
  #   name: "monitoring-ssd"
  #   accessMode: ReadWriteOnce
  #   size: 50Gi
  #   mountPath: /var/lib/influxdb2
  #   subPath: ""


  service:
    type: LoadBalancer 
    port: 8086 
    targetPort: 8086
    annotations: {}
    labels: {}
    portName: http

  serviceAccount:
    create: true
    # The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
    # Annotations for the ServiceAccount
    annotations: {}
