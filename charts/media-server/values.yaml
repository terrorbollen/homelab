# Default values for mediaserver chart
# This is a YAML-formatted file.
#

bazarr:
  image:
    repository: ghcr.io/home-operations/bazarr
    pullPolicy: IfNotPresent

  service:
    main:
      ports:
        main:
          port: 6767
          protocol: http
          targetPort: 6767

  persistence:
    config:
      enabled: true
      type: pvc
      retain: true
      size: 1Gi

    media:
      enabled: true
      type: pvc
      volumeName: media-ssd
      existingClaim: media-ssd
      mountPath: "/movies"
      subPath: "library/movies"


    # media:
    #   enabled: true
    #   type: pvc
    #   existingClaim: media-ssd
    #   targetSelector:
    #     main:
    #       main:
    #         mountPath: "/movies"


# bazarr:
#   replicaCount: 1
#   image:
#     repository: linuxserver/bazarr
#     tag: latest 
#     pullPolicy: IfNotPresent
#
#   env:
#     - name: TZ
#       value: UTC
#     - name: PUID
#       value: "1000"
#     - name: PGID
#       value: "1000"
#
#   service:
#     main:
#       ports:
#         http:
#           port: 80
#           targetPort: 6767
#
#   persistence:
#     configs:
#       enabled: true
#       type: pvc
#       mountPath: "/config"
#       subPath:  "configs/bazarr"
#       existingClaim: media-ssd
#
#     media:
#       enabled: true
#       type: pvc
#       mountPath: "/movies"
#       subPath: "library/movies"
#       existingClaim: media-ssd

  # resources:
  #   requests:
  #     cpu: "100m"
  #     memory: "250Mi"
  #   limits:
  #     cpu: "500m"
  #     memory: "500Mi"


emby:
  replicaCount: 1
  image:
    repository: linuxserver/emby
    pullPolicy: IfNotPresent

  env:
    - name: TZ
      value: "UTC"
    - name: UID
      value: "1000"
    - name: GID
      value: "1000"

  service:
    type: ClusterIP
    port: 80

  volumes:
    - name: "media-ssd"
      persistentVolumeClaim:
        claimName: "media-ssd"

  volumeMounts:
    - name: media-ssd
      mountPath: "/config"
      subPath: "configs/emby"
    - name: media-ssd
      mountPath: "/tv"
      subPath: "library/tv"
    - name: media-ssd
      mountPath: "/movies"
      subPath: "library/movies"


prowlarr:
  replicaCount: 1

  image:
    repository: linuxserver/prowlarr
    tag: latest 
    pullPolicy: IfNotPresent

  env:
    - name: TZ
      value: UTC
    - name: PUID
      value: "1000"
    - name: PGID
      value: "1000"

  service:
    main:
      ports:
        http:
          port: 80
          targetPort: 9696

  persistence:
    configs:
      enabled: true
      existingClaim: media-ssd
      mountPath: /config
      subPath: configs/prowlarr

  resources:
    requests:
      cpu: "100m"
      memory: "250Mi"
    limits:
      cpu: "500m"
      memory: "350Mi"

radarr:
  replicaCount: 1

  image:
    repository: linuxserver/radarr
    pullPolicy: IfNotPresent

  env:
    - name: PUID
      value: "1000"
    - name: PGID
      value: "1000"

  service:
    type: ClusterIP
    port: 80

  volumes:
    - name: "media-ssd"
      persistentVolumeClaim:
        claimName: "media-ssd"

  volumeMounts:
    - name: "media-ssd"
      mountPath: "/config"
      subPath: "configs/radarr"
    - name: "media-ssd"
      mountPath: "/downloads/transmission"
      subPath: "downloads/transmission"
    - name: media-ssd
      mountPath: "/movies"
      subPath: "library/movies"

  resources:
    requests:
      cpu: "100m"
      memory: "250Mi"
    limits:
      cpu: "500m"
      memory: "350Mi"

sonarr:
  replicaCount: 1

  image:
    repository: linuxserver/sonarr
    tag: latest
    pullPolicy: IfNotPresent

  env:
    - name: PUID
      value: "1000"
    - name: PGID
      value: "1000"

  service:
    type: ClusterIP
    port: 80

  volumes:
    - name: media-ssd
      persistentVolumeClaim:
        claimName: "media-ssd"

  volumeMounts:
    - name: media-ssd
      mountPath: "/config"
      subPath: "configs/sonarr"
    - name: media-ssd
      mountPath: "/downloads/transmission"
      subPath: "downloads/transmission"
    - name: media-ssd
      mountPath: "/tv"
      subPath: "library/tv"

  resources:
    requests:
      cpu: "100m"
      memory: "250Mi"
    limits:
      cpu: "500m"
      memory: "350Mi"

transmission-openvpn:
  replicaCount: 1

  image:
    repository: "haugene/transmission-openvpn"
    tag: "latest"
    pullPolicy: "IfNotPresent"

  env:
    - name: OPENVPN_PROVIDER
      value: "MULLVAD"
    - name: OPENVPN_USERNAME
      valueFrom:
        secretKeyRef:
          name: "mullvad"
          key: "username"
    - name: OPENVPN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: "mullvad"
          key: "password"
    - name: OPENVPN_CONFIG
      value: se_all
    - name: LOCAL_NETWORK
      value: "192.168.0.0/24"
    - name: TRANSMISSION_PEER_PORT
      value: "47444"
    - name: TRANSMISSION_DOWNLOAD_DIR
      value: "/downloads/transmission"
    - name: PUID
      value: "1000"
    - name: PGID
      value: "1000"
    - name: CREATE_TUN_DEVICE
      value: "false"

  service:
    type: ClusterIP
    port: 80

  volumes:
    - name: "media-ssd"
      persistentVolumeClaim:
        claimName: "media-ssd"
    - name: "dev-tun"
      hostPath:
        path: "/dev/net/tun"

  volumeMounts:
    - name: "media-ssd"
      mountPath: "/data"
      subPath: "configs/transmission-data"
    - name: "media-ssd"
      mountPath: "/downloads/transmission"
      subPath: "downloads/transmission"
    - name: "dev-tun"
      mountPath: "/dev/net/tun"

  securityContext:
    capabilities:
      add:
        - NET_ADMIN

  resources:
    requests:
      cpu: "100m"
      memory: "250Mi"
    limits:
      cpu: "500m"
      memory: "350Mi"

# Ingress configuration
ingress:
  enabled: true
  class: traefik
  ip: "192.168.0.36"
  host: "" # Leave empty to use nip.io with the IP
  annotations: {}

storage:
  persistentVolume:
    create: true
    name: "media-ssd"
    labels:
      type: "local"
    capacity: "2Ti"
    accessMode: ReadWriteMany
    hostPath: "/mnt/ssd/media"

  persistentVolumeClaim:
    create: true
    name: "media-ssd"
    accessMode: ReadWriteMany
    capacity: "2Ti"
